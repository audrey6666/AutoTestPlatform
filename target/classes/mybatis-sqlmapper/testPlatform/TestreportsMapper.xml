<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.finup.dataeco.mapper.testPlatform.TestreportsMapper" >
  <resultMap id="BaseResultMap" type="com.finup.dataeco.model.testPlatform.Testreports" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="report_name" property="reportName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="start_at" property="startAt" jdbcType="VARCHAR" />
    <result column="testsRun" property="testsrun" jdbcType="INTEGER" />
    <result column="successes" property="successes" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.finup.dataeco.model.testPlatform.Testreports" extends="BaseResultMap" >
    <result column="reports" property="reports" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, create_time, update_time, report_name, status, start_at, testsRun, successes
  </sql>
  <sql id="Blob_Column_List" >
    reports
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from testreports
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from testreports
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.finup.dataeco.model.testPlatform.Testreports" >
    insert into testreports (id, create_time, update_time, 
      report_name, status, start_at, 
      testsRun, successes, reports
      )
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{reportName,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, #{startAt,jdbcType=VARCHAR}, 
      #{testsrun,jdbcType=INTEGER}, #{successes,jdbcType=VARCHAR}, #{reports,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.finup.dataeco.model.testPlatform.Testreports" >
    insert into testreports
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="reportName != null" >
        report_name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="startAt != null" >
        start_at,
      </if>
      <if test="testsrun != null" >
        testsRun,
      </if>
      <if test="successes != null" >
        successes,
      </if>
      <if test="reports != null" >
        reports,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reportName != null" >
        #{reportName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="startAt != null" >
        #{startAt,jdbcType=VARCHAR},
      </if>
      <if test="testsrun != null" >
        #{testsrun,jdbcType=INTEGER},
      </if>
      <if test="successes != null" >
        #{successes,jdbcType=VARCHAR},
      </if>
      <if test="reports != null" >
        #{reports,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.finup.dataeco.model.testPlatform.Testreports" >
    update testreports
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reportName != null" >
        report_name = #{reportName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="startAt != null" >
        start_at = #{startAt,jdbcType=VARCHAR},
      </if>
      <if test="testsrun != null" >
        testsRun = #{testsrun,jdbcType=INTEGER},
      </if>
      <if test="successes != null" >
        successes = #{successes,jdbcType=VARCHAR},
      </if>
      <if test="reports != null" >
        reports = #{reports,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.finup.dataeco.model.testPlatform.Testreports" >
    update testreports
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      report_name = #{reportName,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      start_at = #{startAt,jdbcType=VARCHAR},
      testsRun = #{testsrun,jdbcType=INTEGER},
      successes = #{successes,jdbcType=VARCHAR},
      reports = #{reports,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.finup.dataeco.model.testPlatform.Testreports" >
    update testreports
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      report_name = #{reportName,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      start_at = #{startAt,jdbcType=VARCHAR},
      testsRun = #{testsrun,jdbcType=INTEGER},
      successes = #{successes,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>